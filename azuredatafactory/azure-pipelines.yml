trigger:
  branches:
    include:
    - feature/*
    - master
  paths:
    include:
    - azuredatafactory
    
pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDir: $(Build.Repository.LocalPath)/azuredatafactory/src
  serviceConnection: 'AzureServiceConnection' 

stages:
  - stage: build
    jobs:
      - job:
        
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
          displayName: 'Install Node.js'

        - task: Npm@1
          inputs:
            command: 'install'
            verbose: true
            workingDir: '$(workingDir)'
          displayName: 'Install npm package'

        - powershell: Get-ChildItem $(workingDir) -Recurse

        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run build validate $(workingDir) /subscriptions/337ba254-3aa0-4551-ba8e-89debefaa373/resourceGroups/RG-Datafactory/providers/Microsoft.DataFactory/factories/adf-testdeploywes'
            workingDir: '$(workingDir)'
          displayName: 'Validate'

        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run build export $(workingDir) /subscriptions/337ba254-3aa0-4551-ba8e-89debefaa373/resourceGroups/RG-Datafactory/providers/Microsoft.DataFactory/factories/adf-testdeploywes artifacts'
            workingDir: '$(workingDir)'
          displayName: 'Validate and Generate ARM template'

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(workingDir)/artifacts'
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)/application' 
          displayName: 'Copying application artifact'

        - task: AzureCLI@2  
          displayName: 'Build bicep artifact' 
          inputs: 
            azureSubscription: $(serviceConnection)
            scriptType: 'pscore'  
            scriptLocation: 'inlineScript'  
            inlineScript: |
              $file = "$(Build.SourcesDirectory)/azuredatafactory/iac/datafactory.bicep"            
              New-Item -ItemType Directory -Force -Path $(build.artifactstagingdirectory)/infrastructure
              az bicep build --file $file --outdir $(build.artifactstagingdirectory)/infrastructure

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(build.artifactstagingdirectory)'
            artifact: 'datafactory'
            publishLocation: 'pipeline'

  - stage: 'development'
    displayName: 'Development deploy'
    dependsOn: build
    variables:
      dataFactoryName: adf-udp-development
    jobs: 
    - deployment: DeployToDevelopment
      pool:
        vmImage: 'vs2017-win2016'
      environment: development 
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                inputs:
                  source: 'current'
                  path: '$(Pipeline.Workspace)'

              - task: AzureResourceManagerTemplateDeployment@3
                inputs:
                  deploymentScope: "Resource Group"
                  azureResourceManagerConnection: $(serviceConnection)
                  subscriptionId: $(subscriptionId)
                  action: "Create Or Update Resource Group"
                  resourceGroupName: "RG-Datafactory"
                  location: "northeurope"
                  templateLocation: "Linked artifact"
                  csmFile: '$(Pipeline.Workspace)\datafactory\infrastructure\datafactory.json'
                  deploymentMode: "Incremental"
                  deploymentOutputs: "ArmOutputs"
                  overrideParameters: |
                    -dataFactoryName $(dataFactoryName)

  - stage: 'uat'
    displayName: 'UAT deploy'
    dependsOn: build
    variables:
      dataFactoryName: adf-uat-development
    jobs: 
    - deployment: DeployToUAT
      pool:
        vmImage: 'vs2017-win2016'
      environment: uat 
      strategy:
        runOnce:
          preDeploy:
            steps:
              - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                inputs:
                  source: 'current'
                  path: '$(Pipeline.Workspace)'

              - task: AzureResourceManagerTemplateDeployment@3
                inputs:
                  deploymentScope: "Resource Group"
                  azureResourceManagerConnection: $(serviceConnection)
                  subscriptionId: $(subscriptionId)
                  action: "Create Or Update Resource Group"
                  resourceGroupName: "RG-Datafactory"
                  location: "northeurope"
                  templateLocation: "Linked artifact"
                  csmFile: '$(Pipeline.Workspace)\datafactory\infrastructure\datafactory.json'
                  deploymentMode: "Incremental"
                  deploymentOutputs: "ArmOutputs"
                  overrideParameters: |
                    -dataFactoryName $(dataFactoryName)
                    
          deploy:
            steps:
              - task: AzureResourceManagerTemplateDeployment@3
                displayName: 'ARM Template deployment: Resource Group scope'
                inputs:
                  deploymentScope: 'Resource Group'
                  azureResourceManagerConnection: $(serviceConnection)
                  subscriptionId: $(subscriptionId)
                  action: 'Create Or Update Resource Group'
                  resourceGroupName: 'RG-Datafactory'
                  location: 'northeurope'
                  templateLocation: 'Linked artifact'
                  csmFile: '$(Pipeline.Workspace)/datafactory/application/ARMTemplateForFactory.json'
                  csmParametersFile: '$(Pipeline.Workspace)/datafactory/application/ARMTemplateParametersForFactory.json'
                  overrideParameters: '-factoryName $(dataFactoryName)'
                  deploymentMode: 'Incremental'
  # - stage: 'production'
  #   displayName: 'Deploy Changes to Production'
  #   dependsOn: build
  #   jobs: 
  #   - deployment: DeployToProduction
  #     pool:
  #       vmImage: 'vs2017-win2016'
  #     environment: Production 
  #     strategy:
  #       runOnce:
  #         deploy:
  #           steps:

  #           - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
  #             inputs:
  #               source: 'current'
  #               path: '$(Pipeline.Workspace)'

  #           - task: AzureResourceManagerTemplateDeployment@3
  #             displayName: 'ARM Template deployment: Resource Group scope'
  #             inputs:
  #               deploymentScope: 'Resource Group'
  #               azureResourceManagerConnection: 'MVP Sponsorship'
  #               subscriptionId: '337ba254-3aa0-4551-ba8e-89debefaa373'
  #               action: 'Create Or Update Resource Group'
  #               resourceGroupName: 'RG-Datafactory'
  #               location: 'North Europe'
  #               templateLocation: 'Linked artifact'
  #               csmFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateForFactory.json'
  #               csmParametersFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateParametersForFactory.json'
  #               overrideParameters: '-factoryName "adf-prd-template"'
  #               deploymentMode: 'Incremental'